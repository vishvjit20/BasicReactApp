{"version":3,"sources":["components/UI/Card.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ChartBar","barFillHeight","maxValue","Math","round","value","style","height","label","Chart","dataPointValues","dataPoints","map","dataPoint","totalMax","max","ExpensesChart","chartDataPoints","expenses","expense","date","getMonth","amount","ExpensesFilter","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","title","ExpensesList","items","length","id","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","console","log","htmlFor","type","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"4ZAOeA,EALF,SAACC,GACZ,IAAMC,EAAO,eAAWD,EAAME,WAC9B,OAAO,qBAAKA,UAAWD,EAAhB,SAA0BD,EAAMG,Y,eCgB1BC,G,MAlBE,SAACJ,GAChB,IAAIK,EAAgB,KAIpB,OAHIL,EAAMM,SAAW,IACnBD,EAAgBE,KAAKC,MAAOR,EAAMS,MAAQT,EAAMM,SAAY,KAAO,KAGnE,sBAAKJ,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,qBACEA,UAAU,kBACVQ,MAAO,CAAEC,OAAQN,OAGrB,qBAAKH,UAAU,mBAAf,SAAmCF,EAAMY,aCKhCC,G,MAjBD,SAACb,GACb,IAAMc,EAAkBd,EAAMe,WAAWC,KAAI,SAACC,GAAD,OAAeA,EAAUR,SAChES,EAAWX,KAAKY,IAAL,MAAAZ,KAAI,YAAQO,IAC7B,OACE,qBAAKZ,UAAU,QAAf,SACGF,EAAMe,WAAWC,KAAI,SAACC,GAAD,OACpB,cAAC,EAAD,CAEER,MAAOQ,EAAUR,MACjBH,SAAUY,EACVN,MAAOK,EAAUL,OAHZK,EAAUL,cCgBVQ,EAxBO,SAACpB,GACrB,IAD+B,EACzBqB,EAAkB,CACtB,CAAET,MAAO,MAAOH,MAAO,GACvB,CAAEG,MAAO,MAAOH,MAAO,GACvB,CAAEG,MAAO,MAAOH,MAAO,GACvB,CAAEG,MAAO,MAAOH,MAAO,GACvB,CAAEG,MAAO,MAAOH,MAAO,GACvB,CAAEG,MAAO,MAAOH,MAAO,GACvB,CAAEG,MAAO,MAAOH,MAAO,GACvB,CAAEG,MAAO,MAAOH,MAAO,GACvB,CAAEG,MAAO,MAAOH,MAAO,GACvB,CAAEG,MAAO,MAAOH,MAAO,GACvB,CAAEG,MAAO,MAAOH,MAAO,GACvB,CAAEG,MAAO,MAAOH,MAAO,IAbM,cAgBTT,EAAMsB,UAhBG,IAgB/B,2BAAsC,CAAC,IAA5BC,EAA2B,QAEpCF,EADqBE,EAAQC,KAAKC,YACJhB,OAASc,EAAQG,QAlBlB,8BAqB/B,OAAO,cAAC,EAAD,CAAOX,WAAYM,KCFbM,G,MAnBQ,SAAC3B,GAItB,OACE,qBAAKE,UAAU,kBAAf,SACE,sBAAKA,UAAU,2BAAf,UACE,mDACA,yBAAQO,MAAOT,EAAM4B,SAAUC,SAPX,SAACC,GACzB9B,EAAM+B,eAAeD,EAAME,OAAOvB,QAM9B,UACE,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,4BCEKwB,G,YAdK,SAACjC,GACnB,IAAMkC,EAAQlC,EAAMwB,KAAKW,eAAe,QAAS,CAAED,MAAO,SACpDE,EAAMpC,EAAMwB,KAAKW,eAAe,QAAS,CAAEC,IAAK,YAChDC,EAAOrC,EAAMwB,KAAKc,cAExB,OACE,sBAAKpC,UAAU,eAAf,UACE,qBAAKA,UAAU,sBAAf,SAAsCgC,IACtC,qBAAKhC,UAAU,qBAAf,SAAqCmC,IACrC,qBAAKnC,UAAU,oBAAf,SAAoCkC,SCK3BG,EAZK,SAACvC,GACnB,OACE,eAAC,EAAD,CAAME,UAAU,eAAhB,UACE,cAAC,EAAD,CAAasB,KAAMxB,EAAMwB,OACzB,sBAAKtB,UAAU,4BAAf,UACE,6BAAKF,EAAMwC,QACX,sBAAKtC,UAAU,sBAAf,cAAuCF,EAAM0B,iBCWtCe,G,MAlBM,SAACzC,GACpB,OAA2B,IAAvBA,EAAM0C,MAAMC,OACP,oBAAIzC,UAAU,0BAAd,gCAGP,oBAAIA,UAAU,gBAAd,SACGF,EAAM0C,MAAM1B,KAAI,SAACO,GAAD,OACf,cAAC,EAAD,CAEEiB,MAAOjB,EAAQiB,MACfd,OAAQH,EAAQG,OAChBF,KAAMD,EAAQC,MAHTD,EAAQqB,WCoBRC,EAxBE,SAAC7C,GAChB,MAAwC8C,mBAAS,QAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAKMC,EAAmBjD,EAAMsB,SAAS4B,QAAO,SAAC3B,GAC9C,OAAOA,EAAQC,KAAKc,cAAca,aAAeJ,KAGnD,OACE,6BACE,eAAC,EAAD,CAAM7C,UAAU,WAAhB,UACE,cAAC,EAAD,CACE0B,SAAUmB,EACVhB,eAboB,SAACqB,GAC3BJ,EAAgBI,MAcZ,cAAC,EAAD,CAAe9B,SAAU2B,IACzB,cAAC,EAAD,CAAcP,MAAOO,U,OCsEdI,G,MA5FK,SAACrD,GACnB,MAAwC8C,mBAAS,IAAjD,mBAAOQ,EAAP,KAAqBC,EAArB,KACA,EAA0CT,mBAAS,IAAnD,mBAAOU,EAAP,KAAsBC,EAAtB,KACA,EAAsCX,mBAAS,IAA/C,mBAAOY,EAAP,KAAoBC,EAApB,KA6CA,OACE,uBAAMC,SAlBc,SAAC9B,GACrBA,EAAM+B,iBAEN,IAAMC,EAAc,CAClBtB,MAAOc,EACP5B,QAAS8B,EACThC,KAAM,IAAIuC,KAAKL,IAGjB1D,EAAMgE,kBAAkBF,GAExBG,QAAQC,IAAIJ,GACZP,EAAgB,IAChBE,EAAiB,IACjBE,EAAe,KAIf,UACE,sBAAKzD,UAAU,wBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,uBAAOiE,QAAQ,GAAf,mBACA,uBACEC,KAAK,OACL3D,MAAO6C,EACPzB,SA5CiB,SAACC,GAC1ByB,EAAgBzB,EAAME,OAAOvB,aA+CzB,sBAAKP,UAAU,uBAAf,UACE,uBAAOiE,QAAQ,GAAf,oBACA,uBACEC,KAAK,SACLC,IAAI,OACJC,KAAK,OACL7D,MAAO+C,EACP3B,SA5CkB,SAACC,GAC3B2B,EAAiB3B,EAAME,OAAOvB,aA+C1B,sBAAKP,UAAU,uBAAf,UACE,uBAAOiE,QAAQ,GAAf,kBACA,uBACEC,KAAK,OACLC,IAAI,aACJlD,IAAI,aACJV,MAAOiD,EACP7B,SAnDgB,SAACC,GACzB6B,EAAe7B,EAAME,OAAOvB,gBAsD1B,sBAAKP,UAAU,uBAAf,UACE,wBAAQkE,KAAK,SAASG,QAASvE,EAAMwE,SAArC,oBAGA,wBAAQJ,KAAK,SAAb,iCClDOK,G,MAnCI,SAACzE,GAClB,MAAkC8C,oBAAS,GAA3C,mBAAO4B,EAAP,KAAkBC,EAAlB,KAmBA,OACE,sBAAKzE,UAAU,cAAf,WACIwE,GACA,wBAAQH,QApBc,WAC1BI,GAAa,IAmBT,6BAEDD,GACC,cAAC,EAAD,CACEV,kBAhBuB,SAACY,GAC9B,IAAMd,EAAW,2BACZc,GADY,IAEfhC,GAAIrC,KAAKsE,SAAS1B,aAGpBnD,EAAM8E,aAAahB,GACnBa,GAAa,IAUPH,SArBmB,WACzBG,GAAa,WCRXI,EAAiB,CACrB,CACEnC,GAAI,KACJJ,MAAO,eACPd,OAAQ,MACRF,KAAM,IAAIuC,KAAK,KAAM,EAAG,KAE1B,CAAEnB,GAAI,KAAMJ,MAAO,SAAUd,OAAQ,OAAQF,KAAM,IAAIuC,KAAK,KAAM,EAAG,KACrE,CACEnB,GAAI,KACJJ,MAAO,gBACPd,OAAQ,OACRF,KAAM,IAAIuC,KAAK,KAAM,EAAG,KAE1B,CACEnB,GAAI,KACJJ,MAAO,oBACPd,OAAQ,IACRF,KAAM,IAAIuC,KAAK,KAAM,EAAG,MAqBbiB,EAjBH,WACV,MAAgClC,mBAASiC,GAAzC,mBAAOzD,EAAP,KAAiB2D,EAAjB,KAQA,OACE,gCACE,cAAC,EAAD,CAAYH,aARU,SAACvD,GACzB0D,GAAY,SAACC,GACX,MAAM,CAAE3D,GAAR,mBAAoB2D,UAOpB,cAAC,EAAD,CAAU5D,SAAUA,QCjC1B6D,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a28c5598.chunk.js","sourcesContent":["import \"./Card.css\";\r\n\r\nconst Card = (props) => {\r\n  const classes = `card ${props.className}`;\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n  const totalMax = Math.max(...dataPointValues);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMax}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import Chart from \"../Chart/Chart\";\r\n\r\nconst ExpensesChart = (props) => {\r\n  const chartDataPoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDataPoints[expenseMonth].value += expense.amount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const changeYearHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={changeYearHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpenseDate;\r\n","import \"./ExpenseItem.css\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport Card from \"../UI/Card\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <Card className=\"expense-item\">\r\n      <ExpenseDate date={props.date} />\r\n      <div className=\"expense-item__description\">\r\n        <h2>{props.title}</h2>\r\n        <div className=\"expense-item__price\">${props.amount}</div>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0)\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n","import { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.expenses.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  return (\r\n    <li>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpensesList items={filteredExpenses} />\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n","import { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\n\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  // Alternative single state\r\n  // const [userInput, setUserInput] = useState({\r\n  //   enteredTitle: \"\",\r\n  //   enteredAmount: \"\",\r\n  //   enteredDate: \"\",\r\n  // });\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n    // setUserInput({\r\n    //   ...userInput,\r\n    //   enteredTitle: event.target.value,\r\n    // });\r\n    // setUserInput((prevState) => {\r\n    //    return {...prevState, enteredTitle: e.target.value}\r\n    // });\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      amount: +enteredAmount,\r\n      date: new Date(enteredDate),\r\n    };\r\n\r\n    props.onSaveExpenseData(expenseData);\r\n\r\n    console.log(expenseData);\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n    setEnteredDate(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"\">Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"\">Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"new-expense__control\">\r\n          <label htmlFor=\"\">Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\n\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    // console.log(expenseData);\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      )}\r\n      {isEditing && (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses expenses={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}